{"ast":null,"code":"const LOAD_PROJECTS = 'project/LOAD';\nconst ADD_PROJECTS = 'projects/ADD';\n\nconst loadProjects = projects => ({\n  type: LOAD_PROJECTS,\n  projects\n});\n\nconst addOneProjects = project => ({\n  type: ADD_PROJECTS,\n  projects\n}); // get all projects \n\n\nexport const getProjects = () => async dispatch => {\n  const res = await fetch(`/api/projects`);\n  const projects = await res.json();\n  dispatch(loadProjects(projects));\n}; // add a new project \n\nexport const createOnePortfolio = payload => async dispatch => {\n  const {\n    user_id,\n    title,\n    instruction,\n    supplies,\n    cost,\n    duration,\n    action,\n    type,\n    image_url,\n    live_links,\n    created_at,\n    updated_at\n  } = payload;\n  const res = await fetch(`/api/projects`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      user_id,\n      title,\n      instruction,\n      supplies,\n      cost,\n      duration,\n      action,\n      type,\n      image_url,\n      live_links,\n      created_at,\n      updated_at\n    })\n  });\n};\nexport default function projectReducer(state = {}, action) {\n  switch (action.type) {\n    case LOAD_Projects:\n      const newProjects = {};\n      action['projects'].projects.forEach(project => {\n        newProjects[project.id] = project;\n      });\n      return { ...state,\n        ...newprojects\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/tayynicc/ReNewME/react-app/src/store/project.js"],"names":["LOAD_PROJECTS","ADD_PROJECTS","loadProjects","projects","type","addOneProjects","project","getProjects","dispatch","res","fetch","json","createOnePortfolio","payload","user_id","title","instruction","supplies","cost","duration","action","image_url","live_links","created_at","updated_at","method","headers","body","JSON","stringify","projectReducer","state","LOAD_Projects","newProjects","forEach","id","newprojects"],"mappings":"AAAA,MAAMA,aAAa,GAAG,cAAtB;AACA,MAAMC,YAAY,GAAG,cAArB;;AAGA,MAAMC,YAAY,GAAIC,QAAD,KAAe;AAChCC,EAAAA,IAAI,EAAEJ,aAD0B;AAEhCG,EAAAA;AAFgC,CAAf,CAArB;;AAMA,MAAME,cAAc,GAAIC,OAAD,KAAc;AACjCF,EAAAA,IAAI,EAAEH,YAD2B;AAEjCE,EAAAA;AAFiC,CAAd,CAAvB,C,CAOA;;;AACA,OAAO,MAAMI,WAAW,GAAG,MAAM,MAAMC,QAAN,IAAmB;AAChD,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,eAAF,CAAvB;AACA,QAAMP,QAAQ,GAAG,MAAMM,GAAG,CAACE,IAAJ,EAAvB;AACAH,EAAAA,QAAQ,CAACN,YAAY,CAACC,QAAD,CAAb,CAAR;AACH,CAJM,C,CAOP;;AACA,OAAO,MAAMS,kBAAkB,GAAIC,OAAD,IAAa,MAAML,QAAN,IAAkB;AAC7D,QAAM;AACFM,IAAAA,OADE;AAEFC,IAAAA,KAFE;AAGFC,IAAAA,WAHE;AAIFC,IAAAA,QAJE;AAKFC,IAAAA,IALE;AAMFC,IAAAA,QANE;AAOFC,IAAAA,MAPE;AAQFhB,IAAAA,IARE;AASFiB,IAAAA,SATE;AAUFC,IAAAA,UAVE;AAWFC,IAAAA,UAXE;AAYFC,IAAAA;AAZE,MAaFX,OAbJ;AAeA,QAAMJ,GAAG,GAAG,MAAMC,KAAK,CAAE,eAAF,EAAkB;AACrCe,IAAAA,MAAM,EAAE,MAD6B;AAErCC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAF4B;AAGrCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACf,MAAAA,OAAD;AAAUC,MAAAA,KAAV;AAAiBC,MAAAA,WAAjB;AAA8BC,MAAAA,QAA9B;AACjBC,MAAAA,IADiB;AAEjBC,MAAAA,QAFiB;AAGjBC,MAAAA,MAHiB;AAIjBhB,MAAAA,IAJiB;AAKjBiB,MAAAA,SALiB;AAMjBC,MAAAA,UANiB;AAOjBC,MAAAA,UAPiB;AAQjBC,MAAAA;AARiB,KAAf;AAH+B,GAAlB,CAAvB;AAaH,CA7BM;AAiCP,eAAe,SAASM,cAAT,CAAwBC,KAAK,GAAC,EAA9B,EAAkCX,MAAlC,EAAyC;AACpD,UAAQA,MAAM,CAAChB,IAAf;AACI,SAAK4B,aAAL;AACI,YAAMC,WAAW,GAAG,EAApB;AACAb,MAAAA,MAAM,CAAC,UAAD,CAAN,CAAmBjB,QAAnB,CAA4B+B,OAA5B,CAAoC5B,OAAO,IAAI;AAC3C2B,QAAAA,WAAW,CAAC3B,OAAO,CAAC6B,EAAT,CAAX,GAA0B7B,OAA1B;AACH,OAFD;AAGA,aAAO,EACH,GAAGyB,KADA;AAEH,WAAGK;AAFA,OAAP;;AAKJ;AACI,aAAOL,KAAP;AAZR;AAcH","sourcesContent":["const LOAD_PROJECTS = 'project/LOAD'\nconst ADD_PROJECTS = 'projects/ADD'\n\n\nconst loadProjects = (projects) => ({\n    type: LOAD_PROJECTS,\n    projects\n})\n\n\nconst addOneProjects = (project) => ({\n    type: ADD_PROJECTS,\n    projects\n})\n\n\n\n// get all projects \nexport const getProjects = () => async(dispatch) => {\n    const res = await fetch(`/api/projects`);\n    const projects = await res.json()\n    dispatch(loadProjects(projects))\n}\n\n\n// add a new project \nexport const createOnePortfolio = (payload) => async dispatch => {\n    const {\n        user_id, \n        title, \n        instruction, \n        supplies,\n        cost,\n        duration,\n        action,\n        type,\n        image_url,\n        live_links,\n        created_at,\n        updated_at\n    } = payload\n\n    const res = await fetch(`/api/projects`, {\n        method: 'POST',\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({user_id, title, instruction, supplies,\n            cost,\n            duration,\n            action,\n            type,\n            image_url,\n            live_links,\n            created_at,\n            updated_at})\n    })\n}\n\n\n\nexport default function projectReducer(state={}, action){\n    switch (action.type) {\n        case LOAD_Projects:\n            const newProjects = {}\n            action['projects'].projects.forEach(project => {\n                newProjects[project.id] = project;\n            })\n            return {\n                ...state,\n                ...newprojects\n            }\n\n        default:\n            return state\n    }\n}\n"]},"metadata":{},"sourceType":"module"}